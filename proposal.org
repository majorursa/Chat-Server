Project 2: Pente Board Game

1. Pente Board Game Overview

Pente is a game played on a standard go board, a 19x19 grid. The game
can be played by 2-4 players. The players set stones, 1 per round, on
the intersections of the grid. Pairs of opposing stones may be
captured by a player by surrounding two of a single players stones
with a players stones. The goal of the game is to either get 5 stones
in a row: horizontally, vertically or diagonally, or to capture 5 of
your opponents pairs.



2. Client-side player Commands

- move (int row, int col)

This selects an intersection where a player would like to lay a
stone. This will be triggered by the player clicking on an
intersection on the game board. The Pente Server will check if it is a
legal move.

- login (username)

The client sends this command to the server, to register for the
game. The Pente Server will send back the player's position.



3. Client commands

- update_board (int[][] board)

The Pente Server will send this command to each client and it will
also send a two-dimensional array of the current board to the client.

- turn_change (int player)

This command sent to a client will tell it a turn change has occured
and will also tell which player's turn it is. So the client can update
the GUI. 

- add_player (String playername, int pos)

Add the player <playername> at position <pos> to your board. There
will be a box for each player with their name and the number of
opponent pairs they have captured so far.

- update_captures ( int capturer, int captured)

This command is sent to each client, telling them to update player
<capturer>'s capture board with a pair of player <capture>'s stones.

- game_won (int player)

This command is sent to each client when one of the player's has won
by either 5 in a row or 5 captures.



4. Server Commands

When it's a players move it will send a message to server:

move [1-19] [1-19]

This is a move the player would like to do, the server must check that
the move is legal and if causes any captures or a win for the
player. If is legal, it will send a "legal" message back to user.

- check_legal (int row, int col)

Checks if a move is legal (ie if the intersection is empty.) 

- check_capture (int row, int col, int player)

Checks if the move captures any stones. It will check if the stone
creates a situation where player <player> is surrounds two stones of
another player, either vertically, horizontally or diagonally.

- check_5 (int row, int col, int player)

Checks if the move creates a 5 in a row for the player: horizontally,
vertically, or diagonally.



5. The GUI

The main board is a 19x19 grid. When it is the user's turn they click
on an unoccupied intersection to place a stone there. 

To the right of the main board are the capture boxes. There is a box
for each player, with a label of their name, and it will indicate the
color of the users stones, and also, a green light if it is that users
turn.



6. Last Move

A nice UI addition would be to indicate what the last move was by a
brighter color or something, otherwise after a player's turn, the main
board will be silently updated and it may be difficult with a complex
arrangement of stones to see what changed. (or there could be a small
diff window green plusses and red minusses.)



7. Sample Game Play

> Start client

You see that there are two players waiting to play already. A dialog
box pops up and asks your name and color preference. 

> You say "Claire" and select the radio button with blue label (green
  and yellow are not selectable as they have already been chose).  

The client is updated with the 3rd box being filled in with your name
and your color selection. A 4th box appears, "Daniel" is the 4th
player and he selected red stones.

The game begins: a green circle appears next to player one's box
"Adam", green, indicating it is Adam's turn. A green stone appears on
the board at 15,14.  

The green circle appears next to "Beth", yellow, capture box,
indicating it is her turn.  A yellow stone appears at 15,15.

The green circle appears next to your name indicating it is your
turn. You click on 15,15. A dialog pops up, "Illegal move, select an
unoccupied intersection." You dismiss the dialog and click on the
intersection of the 14th row and 15th column. A stone with your color
appears.

...

You capture two of Adam's green stones by placing a stone on one side
of them (you already have a stone on the other side.) The stones
disappear and two stones of the same color appear in your capture box.

...

You place a stone and it is the 5th of your stones in a row. A dialog
(or Toast) appears saying "Claire Wins" and a bright line connects the
5 stones. This dialog and line appears in each client and the game ends.
